/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgePassNFT, BridgePassNFTInterface } from "../BridgePassNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PAYMENT_TOO_LOW",
    type: "error",
  },
  {
    inputs: [],
    name: "SOLD_OUT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1StandardBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Gas",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmountPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintPerAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyBasisPoints",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseUri",
        type: "string",
      },
    ],
    name: "setBaseUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
    ],
    name: "setL2Gas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyBasisPoints",
        type: "uint96",
      },
    ],
    name: "setRoyaltyBasisPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyRecipient",
        type: "address",
      },
    ],
    name: "setRoyaltyRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    name: "setcost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600b80546001600160a01b0319167399c9fc46f92e8a1c0dec1b1747d010903e884be117905566038d7ea4c68000600d557501f4523d007855b3543797e0d3d462cb44b601274819600e55600c600f5560016010556012805463ffffffff191662030d401790553480156200007857600080fd5b506040518060400160405280601881526020017f42726964676520506173732054726565206f66204c69666500000000000000008152506040518060400160405280600581526020016410941513d360da1b8152508160029081620000de91906200046e565b506003620000ed82826200046e565b50506008805460ff1916905550620001053362000187565b600160095560408051606081019091526036808252620024bb6020830139600c906200013290826200046e565b50600e546200015c906001600160a01b03811690600160a01b90046001600160601b0316620001e1565b600f546011556200018173523d007855b3543797e0d3d462cb44b601274819620002e6565b6200053a565b600880546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6127106001600160601b0382161115620002555760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620002ad5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c69642072656365697665720000000000000060448201526064016200024c565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b620002f062000365565b6001600160a01b038116620003575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200024c565b620003628162000187565b50565b6008546001600160a01b03610100909104163314620003c75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200024c565b565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003f457607f821691505b6020821081036200041557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200046957600081815260208120601f850160051c81016020861015620004445750805b601f850160051c820191505b81811015620004655782815560010162000450565b5050505b505050565b81516001600160401b038111156200048a576200048a620003c9565b620004a2816200049b8454620003df565b846200041b565b602080601f831160018114620004da5760008415620004c15750858301515b600019600386901b1c1916600185901b17855562000465565b600085815260208120601f198616915b828110156200050b57888601518255948401946001909101908401620004ea565b50858210156200052a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611f71806200054a6000396000f3fe60806040526004361061021a5760003560e01c806342260b5d116101235780638da5cb5b116100ab578063b88d4fde1161006f578063b88d4fde14610633578063c87b56dd14610653578063d5abeb0114610673578063e985e9c514610689578063f2fde38b146106d257600080fd5b80638da5cb5b146105a557806394354fd0146105c857806395d89b41146105de578063a0bcfc7f146105f3578063a22cb4651461061357600080fd5b80635c975abb116100f25780635c975abb146105235780636352211e1461053b57806370a082311461055b578063715018a61461057b5780638456cb591461059057600080fd5b806342260b5d1461048457806342842e0e146104c3578063442f8d03146104e35780634c00de821461050357600080fd5b806323b872dd116101a65780633a1c5834116101755780633a1c5834146103e75780633cbb6979146103fd5780633f4ba83a1461042f57806340d097c31461044457806341e42f301461046457600080fd5b806323b872dd14610348578063299c6937146103685780632a55205a1461038857806333bec7e7146103c757600080fd5b8063081812fc116101ed578063081812fc146102d3578063095ea7b3146102f35780631249c58b1461031557806313faede61461031d57806318160ddd1461033357600080fd5b806301ffc9a71461021f578063047fc9aa1461025457806306fdde0314610279578063078f29cf1461029b575b600080fd5b34801561022b57600080fd5b5061023f61023a366004611861565b6106f2565b60405190151581526020015b60405180910390f35b34801561026057600080fd5b50600a5461026b9081565b60405190815260200161024b565b34801561028557600080fd5b5061028e610703565b60405161024b91906118d6565b3480156102a757600080fd5b50600b546102bb906001600160a01b031681565b6040516001600160a01b03909116815260200161024b565b3480156102df57600080fd5b506102bb6102ee3660046118e9565b610795565b3480156102ff57600080fd5b5061031361030e36600461191e565b6107bc565b005b6103136108d6565b34801561032957600080fd5b5061026b600d5481565b34801561033f57600080fd5b5061026b6109c8565b34801561035457600080fd5b50610313610363366004611948565b6109d8565b34801561037457600080fd5b506103136103833660046118e9565b610a09565b34801561039457600080fd5b506103a86103a3366004611984565b610a16565b604080516001600160a01b03909316835260208301919091520161024b565b3480156103d357600080fd5b506103136103e23660046119a6565b610ac2565b3480156103f357600080fd5b5061026b60115481565b34801561040957600080fd5b5060125461041a9063ffffffff1681565b60405163ffffffff909116815260200161024b565b34801561043b57600080fd5b50610313610ae6565b34801561045057600080fd5b5061031361045f3660046119cc565b610af6565b34801561047057600080fd5b5061031361047f3660046119cc565b610b57565b34801561049057600080fd5b50600e546104ab90600160a01b90046001600160601b031681565b6040516001600160601b03909116815260200161024b565b3480156104cf57600080fd5b506103136104de366004611948565b610b81565b3480156104ef57600080fd5b506103136104fe3660046119e7565b610b9c565b34801561050f57600080fd5b50600e546102bb906001600160a01b031681565b34801561052f57600080fd5b5060085460ff1661023f565b34801561054757600080fd5b506102bb6105563660046118e9565b610bcc565b34801561056757600080fd5b5061026b6105763660046119cc565b610c2c565b34801561058757600080fd5b50610313610cb2565b34801561059c57600080fd5b50610313610cc4565b3480156105b157600080fd5b5060085461010090046001600160a01b03166102bb565b3480156105d457600080fd5b5061026b60105481565b3480156105ea57600080fd5b5061028e610cd4565b3480156105ff57600080fd5b5061031361060e366004611a9c565b610ce3565b34801561061f57600080fd5b5061031361062e366004611ae5565b610cf7565b34801561063f57600080fd5b5061031361064e366004611b21565b610d02565b34801561065f57600080fd5b5061028e61066e3660046118e9565b610d3a565b34801561067f57600080fd5b5061026b600f5481565b34801561069557600080fd5b5061023f6106a4366004611b9d565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156106de57600080fd5b506103136106ed3660046119cc565b610d6b565b60006106fd82610de4565b92915050565b60606002805461071290611bd0565b80601f016020809104026020016040519081016040528092919081815260200182805461073e90611bd0565b801561078b5780601f106107605761010080835404028352916020019161078b565b820191906000526020600020905b81548152906001019060200180831161076e57829003601f168201915b5050505050905090565b60006107a082610def565b506000908152600660205260409020546001600160a01b031690565b60006107c782610bcc565b9050806001600160a01b0316836001600160a01b0316036108395760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610855575061085581336106a4565b6108c75760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610830565b6108d18383610e4e565b505050565b600d543410156108f957604051630f34f48d60e11b815260040160405180910390fd5b600f54600a5461090a906001611c20565b111561092957604051630f968f6960e21b815260040160405180910390fd5b610937600a80546001019055565b600b54601254604051639a2ac6d560e01b815233600482015263ffffffff909116602482015260606044820152600060648201526001600160a01b0390911690639a2ac6d59034906084016000604051808303818588803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b50505050506109c6336109c1600a5490565b610ebc565b565b60006109d3600a5490565b905090565b6109e23382610ed6565b6109fe5760405162461bcd60e51b815260040161083090611c38565b6108d1838383610f55565b610a116110fc565b600d55565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610a8b5750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610aaa906001600160601b031687611c86565b610ab49190611cbb565b915196919550909350505050565b610aca6110fc565b6012805463ffffffff191663ffffffff92909216919091179055565b610aee6110fc565b6109c661115c565b610afe6110fc565b600f54600a54610b0f906001611c20565b1115610b2e57604051630f968f6960e21b815260040160405180910390fd5b610b3c600a80546001019055565b6000610b47600a5490565b9050610b538282610ebc565b5050565b610b5f6110fc565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b6108d183838360405180602001604052806000815250610d02565b610ba46110fc565b600e80546001600160601b03909216600160a01b026001600160a01b03909216919091179055565b6000818152600460205260408120546001600160a01b0316806106fd5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610830565b60006001600160a01b038216610c965760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610830565b506001600160a01b031660009081526005602052604090205490565b610cba6110fc565b6109c660006111ae565b610ccc6110fc565b6109c6611208565b60606003805461071290611bd0565b610ceb6110fc565b600c610b538282611d1d565b610b53338383611245565b610d0c3383610ed6565b610d285760405162461bcd60e51b815260040161083090611c38565b610d3484848484611313565b50505050565b6060610d4582611346565b604051602001610d559190611ddd565b6040516020818303038152906040529050919050565b610d736110fc565b6001600160a01b038116610dd85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610830565b610de1816111ae565b50565b60006106fd826113ad565b6000818152600460205260409020546001600160a01b0316610de15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610830565b600081815260066020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e8382610bcc565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610b538282604051806020016040528060008152506113ed565b600080610ee283610bcc565b9050806001600160a01b0316846001600160a01b03161480610f2957506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b80610f4d5750836001600160a01b0316610f4284610795565b6001600160a01b0316145b949350505050565b826001600160a01b0316610f6882610bcc565b6001600160a01b031614610fcc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610830565b6001600160a01b03821661102e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610830565b611039838383611420565b611044600082610e4e565b6001600160a01b038316600090815260056020526040812080546001929061106d908490611e06565b90915550506001600160a01b038216600090815260056020526040812080546001929061109b908490611c20565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6008546001600160a01b036101009091041633146109c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610830565b611164611428565b6008805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600880546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611210611471565b6008805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111913390565b816001600160a01b0316836001600160a01b0316036112a65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610830565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61131e848484610f55565b61132a848484846114b7565b610d345760405162461bcd60e51b815260040161083090611e1d565b606061135182610def565b600061135b6115b8565b9050600081511161137b57604051806020016040528060008152506113a6565b80611385846115c7565b604051602001611396929190611e6f565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b14806113de57506001600160e01b03198216635b5e139f60e01b145b806106fd57506106fd826116c8565b6113f783836116fd565b61140460008484846114b7565b6108d15760405162461bcd60e51b815260040161083090611e1d565b6108d1611471565b60085460ff166109c65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610830565b60085460ff16156109c65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610830565b60006001600160a01b0384163b156115ad57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906114fb903390899088908890600401611e9e565b6020604051808303816000875af1925050508015611536575060408051601f3d908101601f1916820190925261153391810190611edb565b60015b611593573d808015611564576040519150601f19603f3d011682016040523d82523d6000602084013e611569565b606091505b50805160000361158b5760405162461bcd60e51b815260040161083090611e1d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f4d565b506001949350505050565b6060600c805461071290611bd0565b6060816000036115ee5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611618578061160281611ef8565b91506116119050600a83611cbb565b91506115f2565b60008167ffffffffffffffff81111561163357611633611a10565b6040519080825280601f01601f19166020018201604052801561165d576020820181803683370190505b5090505b8415610f4d57611672600183611e06565b915061167f600a86611f11565b61168a906030611c20565b60f81b81838151811061169f5761169f611f25565b60200101906001600160f81b031916908160001a9053506116c1600a86611cbb565b9450611661565b60006001600160e01b0319821663152a902d60e11b14806106fd57506301ffc9a760e01b6001600160e01b03198316146106fd565b6001600160a01b0382166117535760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610830565b6000818152600460205260409020546001600160a01b0316156117b85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610830565b6117c460008383611420565b6001600160a01b03821660009081526005602052604081208054600192906117ed908490611c20565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610de157600080fd5b60006020828403121561187357600080fd5b81356113a68161184b565b60005b83811015611899578181015183820152602001611881565b83811115610d345750506000910152565b600081518084526118c281602086016020860161187e565b601f01601f19169290920160200192915050565b6020815260006113a660208301846118aa565b6000602082840312156118fb57600080fd5b5035919050565b80356001600160a01b038116811461191957600080fd5b919050565b6000806040838503121561193157600080fd5b61193a83611902565b946020939093013593505050565b60008060006060848603121561195d57600080fd5b61196684611902565b925061197460208501611902565b9150604084013590509250925092565b6000806040838503121561199757600080fd5b50508035926020909101359150565b6000602082840312156119b857600080fd5b813563ffffffff811681146113a657600080fd5b6000602082840312156119de57600080fd5b6113a682611902565b6000602082840312156119f957600080fd5b81356001600160601b03811681146113a657600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a4157611a41611a10565b604051601f8501601f19908116603f01168101908282118183101715611a6957611a69611a10565b81604052809350858152868686011115611a8257600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611aae57600080fd5b813567ffffffffffffffff811115611ac557600080fd5b8201601f81018413611ad657600080fd5b610f4d84823560208401611a26565b60008060408385031215611af857600080fd5b611b0183611902565b915060208301358015158114611b1657600080fd5b809150509250929050565b60008060008060808587031215611b3757600080fd5b611b4085611902565b9350611b4e60208601611902565b925060408501359150606085013567ffffffffffffffff811115611b7157600080fd5b8501601f81018713611b8257600080fd5b611b9187823560208401611a26565b91505092959194509250565b60008060408385031215611bb057600080fd5b611bb983611902565b9150611bc760208401611902565b90509250929050565b600181811c90821680611be457607f821691505b602082108103611c0457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611c3357611c33611c0a565b500190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6000816000190483118215151615611ca057611ca0611c0a565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611cca57611cca611ca5565b500490565b601f8211156108d157600081815260208120601f850160051c81016020861015611cf65750805b601f850160051c820191505b81811015611d1557828155600101611d02565b505050505050565b815167ffffffffffffffff811115611d3757611d37611a10565b611d4b81611d458454611bd0565b84611ccf565b602080601f831160018114611d805760008415611d685750858301515b600019600386901b1c1916600185901b178555611d15565b600085815260208120601f198616915b82811015611daf57888601518255948401946001909101908401611d90565b5085821015611dcd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251611def81846020870161187e565b64173539b7b760d91b920191825250600501919050565b600082821015611e1857611e18611c0a565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611e8181846020880161187e565b835190830190611e9581836020880161187e565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ed1908301846118aa565b9695505050505050565b600060208284031215611eed57600080fd5b81516113a68161184b565b600060018201611f0a57611f0a611c0a565b5060010190565b600082611f2057611f20611ca5565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212208ea439ac13538976d99a542c7321efa0b17190f050bf32fd07a31c5e0777ad4c64736f6c634300080f0033697066733a2f2f516d6569694c466868626671543775615239316a79387734453179346e7a6f35396552616847516d776f766642642f";

type BridgePassNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgePassNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgePassNFT__factory extends ContractFactory {
  constructor(...args: BridgePassNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BridgePassNFT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgePassNFT> {
    return super.deploy(overrides || {}) as Promise<BridgePassNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgePassNFT {
    return super.attach(address) as BridgePassNFT;
  }
  connect(signer: Signer): BridgePassNFT__factory {
    return super.connect(signer) as BridgePassNFT__factory;
  }
  static readonly contractName: "BridgePassNFT";
  public readonly contractName: "BridgePassNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgePassNFTInterface {
    return new utils.Interface(_abi) as BridgePassNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgePassNFT {
    return new Contract(address, _abi, signerOrProvider) as BridgePassNFT;
  }
}
